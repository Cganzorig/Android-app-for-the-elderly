apply plugin: 'com.android.application'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

android {
    compileSdkVersion 28
//    testOptions.unitTests.includeAndroidResources = true
//    testOptions {
//        unitTests.all {
//            jacoco {
//                includeNoLocationClasses = true
//            }
//        }
//    }
    defaultConfig {
        applicationId "com.launcher.ava.elderlylauncher"
        minSdkVersion 22
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {

        // added to try and get test coverage out of Jacoco
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    productFlavors {
    }

    compileOptions {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support.test:rules:1.0.2'

    androidTestUtil 'com.android.support.test:orchestrator:1.0.2'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.2'
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation 'org.mockito:mockito-core:2.24.5'


}

//// Added Roboelectirc dependencies: http://robolectric.org/getting-started/
//android {
//    testOptions {
//        unitTests {
//            includeAndroidResources = true
//        }
//    }
//}


//dependencies {
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'org.mockito:mockito-core:2.24.5'
//    androidTestImplementation 'org.mockito:mockito-android:2.7.22'
//    testImplementation 'org.mockito:mockito-core:2.24.5'
//}

//dependencies {
//    //androidTestImplementation 'androidx.test:runner:1.1.0'
//    //androidTestImplementation 'androidx.test:rules:1.1.0'
//    // Optional -- Hamcrest library
//    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
//    // Optional -- UI testing with Espresso
//    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
//    testImplementation 'androidx.test:core:1.1.0'
//    androidTestImplementation "com.android.support.test:runner:1.0.2"
//    androidTestImplementation "com.android.support.test:rules:1.0.2"
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//
//    // Optional -- UI testing with UI Automator
//    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
//}
// apply jacoco plugin and configure



task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}